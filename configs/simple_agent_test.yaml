# Get conf by running --cfg job --resolve

# State selector choices, env/datasource/state_selector:
# df_fullrandom
# df_randombuffer - Choix DD avec HSLinUCB mais pb. singular matrix avec KFOO
# df_sequential - At each reset choose the workload from the current episode index, go to the top or bottom state of the workload as specified by topdown argument.
# df_fullsequential - Choix PR, Optmal? - Start at the begining of the dataset and go to the next state at each reset. When bottom state is reached, next reset will go to the next workload (auto rewind)
# df_topdownrocker - Especially for tests Start sequentialy each workload twice. First from Top, second from Bottom
# df_randomtopdown - Starts randomly at each Reset from Top buffer value or Bottom buffer value
# db_live - Connected to a live database, at each reset do not touch the buffer value

# All agents:
# linucb_kfoo (LinUCB)
# linucb_hs   (HSLinUCB, i.e. HorizontalScaling LinUCB)
# ppo
# dqn
# a2c
# sac
# ddpg

# python run_best_agent.py tuner=ppo
# python run_best_agent.py +experiment=ppo ++n_trials=10

defaults:
  - best_agent
  - override tuner: linucb_kfoofw
  - override tuner/reward: sigmoidhybriddiscretmoveidelta
  - override tuner/env/observations: prod_optimal
  - _self_

version_minor: 56_01-opt_linucb_kfoofw_sigmoid_randomtrained
trial: 21
seed: 0
eval_data: False     # Use EVAL dataset or TEST dataset
REW_ALPHA_COEF: 0.2
REW_BETA_COEF: 0.
DETERMINISTIC: False  # Flag passed to SB3's predict method. Default is False

verbosity: 1
pickles_dirname: E${version}_${version_minor}
pickles_path: ${output_path}/${pickles_dirname}


